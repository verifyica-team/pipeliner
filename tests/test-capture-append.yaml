pipeline:
  name: test-capture-overwrite.yaml
  id: pipeline-1
  with:
    test.scripts.directory: $PIPELINER_HOME/tests/scripts
  jobs:
    - name: job 1
      id: job-1
      steps:
        - name: step 1
          id: step-1
          enabled: true
          run: |
            echo "The version is " >> $version.1
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ version.1 }}" "The version is "
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ step-1.version.1 }}" "The version is "
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ job-1.step-1.version.1 }}" "The version is "
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ pipeline-1.job-1.step-1.version.1 }}" "The version is "
        - name: step 2
          id: step-2
          enabled: true
          run: |
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ step-1.version.1 }}" "The version is "
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ job-1.step-1.version.1 }}" "The version is "
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ pipeline-1.job-1.step-1.version.1 }}" "The version is "
        - name: step 3
          id: step-3
          enabled: true
          run: ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ pipeline-1.job-1.step-1.version.1 }}" "The version is "
        - name: step 4
          id: step-4
          enabled: true
          run: ./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout >> $version.1
        - name: step 5
          id: step-5
          enabled: true
          run: |
            $PIPELINER --version > $version.2
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "The version is ${{ version.2 }}" "${{ version.1 }}"
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "The version is ${{ version.2 }}" "${{ version.1 }}"
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "The version is ${{ pipeline-1.job-1.step-5.version.2 }}" "${{ version.1 }}"
        - name: step 6
          id: step-6
          enabled: true
          run: echo "Overwritten value" > $version
        - name: step 7
          id: step-7
          enabled: true
          run: ${{ test.scripts.directory }}/test-arguments-are-equal.sh "${{ version }}" "Overwritten value"
        - name: step 8
          id: my-step
          enabled: true
          run: |
            echo "test string" > $version.1
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "test string" "${{ version.1 }}"
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "test string" "${{ my-step.version.1 }}" 
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "test string" "${{ job-1.my-step.version.1 }}"
            ${{ test.scripts.directory }}/test-arguments-are-equal.sh "test string" "${{ pipeline-1.job-1.my-step.version.1 }}" 
