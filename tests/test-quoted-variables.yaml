pipeline:
  name: test-quoted
  with:
    test_scripts_directory: $PIPELINER_HOME/tests/scripts
    test_variable: "test value"
  jobs:
    - name: test-quoted
      steps:
        - name: cleanup file
          run: rm -Rf $PIPELINER_TMP/ps-aux-root.txt
        - name: step-1
          run: ps aux | awk '{ print $1, $11}' | grep root > $PIPELINER_TMP/ps-aux-root.txt
        - name: cleanup file
          run: rm -Rf $PIPELINER_TMP/ps-aux-root.txt
        - name: step-2
          run: echo '$PIPELINER_TMP' "$PIPELINER_TMP"
        - name: step-3
          run: echo "$PIPELINER_TMP" '$PIPELINER_TMP'
        - name: step-4
          run: echo '${PIPELINER_TMP}' "$PIPELINER_TMP"
        - name: step-5
          run: echo "$PIPELINER_TMP" '${PIPELINER_TMP}'
        - name: test-6
          run: echo "'$PIPELINER_TMP'" '$PIPELINER_TMP'
        - name: test-7
          run: echo '"$PIPELINER_TMP"' "$PIPELINER_TMP"
        - name: test-8
          run: echo \"\${{ test_variable }}\" \"${{ test_variable }}\"
        - name: test-9
          with:
            test_variable_1: \${PWD}
            test_variable_2: $PWD
            test_variable_3: ${PWD}
            test_variable_4: FOO_ ${{ test_variable_2 }} _BAR
            test_variable_5: FOO_ ${{ test_variable_2 }} ${{ test_variable_3 }} _BAR
          run: |
            echo \"\${{ test_variable_1 }}\" \"${{ test_variable_1 }}\" \"${{ test_variable_2 }}\" \"${{ test_variable_3 }}\" \"${{ test_variable_4 }}\"
            ${{test_scripts_directory}}/test-arguments-are-equal.sh "${{ test_variable_1 }}" "\${PWD}"
            ${{test_scripts_directory}}/test-arguments-are-equal.sh "${{ test_variable_2 }}" "$PWD"
            ${{test_scripts_directory}}/test-arguments-are-equal.sh "${{ test_variable_2 }}" "${PWD}"
            ${{test_scripts_directory}}/test-arguments-are-equal.sh "FOO_ $PWD _BAR" "${{ test_variable_4 }}"
            ${{test_scripts_directory}}/test-arguments-are-equal.sh "FOO_ $PWD ${PWD} _BAR" "${{ test_variable_5 }}"
